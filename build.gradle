/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id("com.github.gmazzo.buildconfig") version '2.0.2'
    id 'signing'
    id 'maven'
    id "com.github.spotbugs" version "4.2.3"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

spotbugs {
    toolVersion = '4.2.3'
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}


dependencies {
    implementation 'com.amazonaws:aws-lambda-java-log4j:1.0.0'
    implementation 'com.amazonaws:aws-lambda-java-events:2.2.7'
    compileOnly 'com.amazonaws:aws-java-sdk-kinesis:1.11.980'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.11'
    implementation 'com.squareup.okhttp3:okhttp:4.4.0'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.slf4j:slf4j-log4j12:1.7.28'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'io.opentracing:opentracing-api:0.33.0'
    implementation 'io.opentracing:opentracing-util:0.33.0'
    implementation 'com.datadoghq:dd-trace-api:0.72.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation 'com.amazonaws:aws-java-sdk-kinesis:1.11.980'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.datadoghq'
version= '0.3.1'
archivesBaseName = "datadog-lambda-java"
description = "datadog-lambda-java"

allprojects {
        apply plugin: 'maven'
        apply plugin: 'maven-publish'
        apply plugin: 'java'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'com.datadoghq'
            artifactId 'datadog-lambda-java'
            version project.version.toString()
        }
    }
}


buildConfig {
    buildConfigField('String', 'datadog_lambda_version', '"' + project.version.toString() + '"')
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv('SONATYPE_USERNAME'), password: System.getenv('SONATYPE_PASSWORD'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv('SONATYPE_USERNAME'), password: System.getenv('SONATYPE_PASSWORD'))
            }

            pom.project {
                name 'Datadog Lambda Java library'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A library for instrumenting your AWS Lambda functions written in Java and sending the telemetry to Datadog'
                url 'http://datadoghq.com'

                scm {
                    connection 'scm:git@github.com:DataDog/datadog-lambda-java.git'
                    developerConnection 'scm:git@github.com:DataDog/datadog-lambda-java.git'
                    url 'https://github.com/DataDog/datadog-lambda-java'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'https://github.com/DataDog/datadog-lambda-java/blob/main/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'serverless'
                        name 'Datadog Serverless Team'
                        email 'support@datadoghq.com'
                    }
                }
            }
        }
    }
}

